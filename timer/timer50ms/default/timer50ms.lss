
timer50ms.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000007c  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .debug_aranges 00000020  00000000  00000000  000000d0  2**0
                  CONTENTS, READONLY, DEBUGGING
  2 .debug_pubnames 00000030  00000000  00000000  000000f0  2**0
                  CONTENTS, READONLY, DEBUGGING
  3 .debug_info   000000aa  00000000  00000000  00000120  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_abbrev 00000063  00000000  00000000  000001ca  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_line   000000da  00000000  00000000  0000022d  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_frame  00000040  00000000  00000000  00000308  2**2
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_str    000000a0  00000000  00000000  00000348  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_loc    00000029  00000000  00000000  000003e8  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	12 c0       	rjmp	.+36     	; 0x26 <__ctors_end>
   2:	19 c0       	rjmp	.+50     	; 0x36 <__bad_interrupt>
   4:	18 c0       	rjmp	.+48     	; 0x36 <__bad_interrupt>
   6:	17 c0       	rjmp	.+46     	; 0x36 <__bad_interrupt>
   8:	16 c0       	rjmp	.+44     	; 0x36 <__bad_interrupt>
   a:	15 c0       	rjmp	.+42     	; 0x36 <__bad_interrupt>
   c:	14 c0       	rjmp	.+40     	; 0x36 <__bad_interrupt>
   e:	13 c0       	rjmp	.+38     	; 0x36 <__bad_interrupt>
  10:	12 c0       	rjmp	.+36     	; 0x36 <__bad_interrupt>
  12:	11 c0       	rjmp	.+34     	; 0x36 <__bad_interrupt>
  14:	10 c0       	rjmp	.+32     	; 0x36 <__bad_interrupt>
  16:	0f c0       	rjmp	.+30     	; 0x36 <__bad_interrupt>
  18:	0e c0       	rjmp	.+28     	; 0x36 <__bad_interrupt>
  1a:	0d c0       	rjmp	.+26     	; 0x36 <__bad_interrupt>
  1c:	0c c0       	rjmp	.+24     	; 0x36 <__bad_interrupt>
  1e:	0b c0       	rjmp	.+22     	; 0x36 <__bad_interrupt>
  20:	0a c0       	rjmp	.+20     	; 0x36 <__bad_interrupt>
  22:	09 c0       	rjmp	.+18     	; 0x36 <__bad_interrupt>
  24:	08 c0       	rjmp	.+16     	; 0x36 <__bad_interrupt>

00000026 <__ctors_end>:
  26:	11 24       	eor	r1, r1
  28:	1f be       	out	0x3f, r1	; 63
  2a:	cf e5       	ldi	r28, 0x5F	; 95
  2c:	d4 e0       	ldi	r29, 0x04	; 4
  2e:	de bf       	out	0x3e, r29	; 62
  30:	cd bf       	out	0x3d, r28	; 61
  32:	17 d0       	rcall	.+46     	; 0x62 <main>
  34:	21 c0       	rjmp	.+66     	; 0x78 <_exit>

00000036 <__bad_interrupt>:
  36:	e4 cf       	rjmp	.-56     	; 0x0 <__vectors>

00000038 <timer0>:
timer0();
}
}
void timer0()
{
TCCR0=0x05;
  38:	85 e0       	ldi	r24, 0x05	; 5
  3a:	83 bf       	out	0x33, r24	; 51
TCNT0=255-49;
  3c:	8e ec       	ldi	r24, 0xCE	; 206
  3e:	82 bf       	out	0x32, r24	; 50
while(!(TIFR&0x01));
  40:	08 b6       	in	r0, 0x38	; 56
  42:	00 fe       	sbrs	r0, 0
  44:	fd cf       	rjmp	.-6      	; 0x40 <__SREG__+0x1>
TIFR|=0x01;
  46:	88 b7       	in	r24, 0x38	; 56
  48:	81 60       	ori	r24, 0x01	; 1
  4a:	88 bf       	out	0x38, r24	; 56
TCCR0=0x00;
  4c:	13 be       	out	0x33, r1	; 51


}
  4e:	08 95       	ret

00000050 <delay>:
#include<avr/io.h>
#include<util/delay.h>
void delay(unsigned char a )
{
  50:	1f 93       	push	r17
  52:	18 2f       	mov	r17, r24
  54:	02 c0       	rjmp	.+4      	; 0x5a <delay+0xa>
for(;a--;)
{
timer0();
  56:	f0 df       	rcall	.-32     	; 0x38 <timer0>
  58:	11 50       	subi	r17, 0x01	; 1
#include<avr/io.h>
#include<util/delay.h>
void delay(unsigned char a )
{
for(;a--;)
  5a:	11 23       	and	r17, r17
  5c:	e1 f7       	brne	.-8      	; 0x56 <delay+0x6>
{
timer0();
}
}
  5e:	1f 91       	pop	r17
  60:	08 95       	ret

00000062 <main>:
TCCR0=0x00;


}
void main()
{
  62:	1f 93       	push	r17
DDRD=0xff;
  64:	8f ef       	ldi	r24, 0xFF	; 255
  66:	81 bb       	out	0x11, r24	; 17
while(1)
{
PORTD=0x0f;
  68:	1f e0       	ldi	r17, 0x0F	; 15
  6a:	12 bb       	out	0x12, r17	; 18

delay(20);
  6c:	84 e1       	ldi	r24, 0x14	; 20
  6e:	f0 df       	rcall	.-32     	; 0x50 <delay>
PORTD=0x00;
  70:	12 ba       	out	0x12, r1	; 18
delay(20);
  72:	84 e1       	ldi	r24, 0x14	; 20
  74:	ed df       	rcall	.-38     	; 0x50 <delay>
  76:	f9 cf       	rjmp	.-14     	; 0x6a <main+0x8>

00000078 <_exit>:
  78:	f8 94       	cli

0000007a <__stop_program>:
  7a:	ff cf       	rjmp	.-2      	; 0x7a <__stop_program>
