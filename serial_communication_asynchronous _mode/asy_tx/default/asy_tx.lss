
asy_tx.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000000de  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .debug_aranges 00000020  00000000  00000000  00000132  2**0
                  CONTENTS, READONLY, DEBUGGING
  2 .debug_pubnames 0000002e  00000000  00000000  00000152  2**0
                  CONTENTS, READONLY, DEBUGGING
  3 .debug_info   0000039f  00000000  00000000  00000180  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_abbrev 00000138  00000000  00000000  0000051f  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_line   000002a0  00000000  00000000  00000657  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_frame  00000040  00000000  00000000  000008f8  2**2
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_str    00000109  00000000  00000000  00000938  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_loc    000000c6  00000000  00000000  00000a41  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_ranges 00000018  00000000  00000000  00000b07  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	12 c0       	rjmp	.+36     	; 0x26 <__ctors_end>
   2:	19 c0       	rjmp	.+50     	; 0x36 <__bad_interrupt>
   4:	18 c0       	rjmp	.+48     	; 0x36 <__bad_interrupt>
   6:	17 c0       	rjmp	.+46     	; 0x36 <__bad_interrupt>
   8:	16 c0       	rjmp	.+44     	; 0x36 <__bad_interrupt>
   a:	15 c0       	rjmp	.+42     	; 0x36 <__bad_interrupt>
   c:	14 c0       	rjmp	.+40     	; 0x36 <__bad_interrupt>
   e:	13 c0       	rjmp	.+38     	; 0x36 <__bad_interrupt>
  10:	12 c0       	rjmp	.+36     	; 0x36 <__bad_interrupt>
  12:	11 c0       	rjmp	.+34     	; 0x36 <__bad_interrupt>
  14:	10 c0       	rjmp	.+32     	; 0x36 <__bad_interrupt>
  16:	0f c0       	rjmp	.+30     	; 0x36 <__bad_interrupt>
  18:	0e c0       	rjmp	.+28     	; 0x36 <__bad_interrupt>
  1a:	0d c0       	rjmp	.+26     	; 0x36 <__bad_interrupt>
  1c:	0c c0       	rjmp	.+24     	; 0x36 <__bad_interrupt>
  1e:	0b c0       	rjmp	.+22     	; 0x36 <__bad_interrupt>
  20:	0a c0       	rjmp	.+20     	; 0x36 <__bad_interrupt>
  22:	09 c0       	rjmp	.+18     	; 0x36 <__bad_interrupt>
  24:	08 c0       	rjmp	.+16     	; 0x36 <__bad_interrupt>

00000026 <__ctors_end>:
  26:	11 24       	eor	r1, r1
  28:	1f be       	out	0x3f, r1	; 63
  2a:	cf e5       	ldi	r28, 0x5F	; 95
  2c:	d4 e0       	ldi	r29, 0x04	; 4
  2e:	de bf       	out	0x3e, r29	; 62
  30:	cd bf       	out	0x3d, r28	; 61
  32:	02 d0       	rcall	.+4      	; 0x38 <main>
  34:	52 c0       	rjmp	.+164    	; 0xda <_exit>

00000036 <__bad_interrupt>:
  36:	e4 cf       	rjmp	.-56     	; 0x0 <__vectors>

00000038 <main>:
void ldata(unsigned char);
void lcmd(unsigned char);
void lstr(unsigned char*);
int main()
{unsigned char a[10],i;
DDRB=0XFF;
  38:	8f ef       	ldi	r24, 0xFF	; 255
  3a:	87 bb       	out	0x17, r24	; 23
DDRC=0XFF;
  3c:	84 bb       	out	0x14, r24	; 20
UCSRB=(1<<RXEN);
  3e:	80 e1       	ldi	r24, 0x10	; 16
  40:	8a b9       	out	0x0a, r24	; 10
UCSRC=(1<<URSEL)|(1<<UCSZ1)|(1<<UCSZ0);
  42:	86 e8       	ldi	r24, 0x86	; 134
  44:	80 bd       	out	0x20, r24	; 32
UBRRH=0x00;
  46:	10 bc       	out	0x20, r1	; 32
UBRRL=51;//BAUD RATE 9600
  48:	83 e3       	ldi	r24, 0x33	; 51
  4a:	89 b9       	out	0x09, r24	; 9
PORTC=0x01;
}

void lcmd(unsigned char x)
{
PORTB=x;
  4c:	88 e3       	ldi	r24, 0x38	; 56
  4e:	88 bb       	out	0x18, r24	; 24
PORTC=0x04;
  50:	94 e0       	ldi	r25, 0x04	; 4
  52:	95 bb       	out	0x15, r25	; 21
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
  54:	22 ee       	ldi	r18, 0xE2	; 226
  56:	34 e0       	ldi	r19, 0x04	; 4
  58:	f9 01       	movw	r30, r18
  5a:	31 97       	sbiw	r30, 0x01	; 1
  5c:	f1 f7       	brne	.-4      	; 0x5a <__SREG__+0x1b>
_delay_ms(5);
PORTC=0;
  5e:	15 ba       	out	0x15, r1	; 21
PORTC=0x01;
}

void lcmd(unsigned char x)
{
PORTB=x;
  60:	86 e0       	ldi	r24, 0x06	; 6
  62:	88 bb       	out	0x18, r24	; 24
PORTC=0x04;
  64:	95 bb       	out	0x15, r25	; 21
  66:	f9 01       	movw	r30, r18
  68:	31 97       	sbiw	r30, 0x01	; 1
  6a:	f1 f7       	brne	.-4      	; 0x68 <__SREG__+0x29>
_delay_ms(5);
PORTC=0;
  6c:	15 ba       	out	0x15, r1	; 21
PORTC=0x01;
}

void lcmd(unsigned char x)
{
PORTB=x;
  6e:	8e e0       	ldi	r24, 0x0E	; 14
  70:	88 bb       	out	0x18, r24	; 24
PORTC=0x04;
  72:	95 bb       	out	0x15, r25	; 21
  74:	f9 01       	movw	r30, r18
  76:	31 97       	sbiw	r30, 0x01	; 1
  78:	f1 f7       	brne	.-4      	; 0x76 <__SREG__+0x37>
_delay_ms(5);
PORTC=0;
  7a:	15 ba       	out	0x15, r1	; 21
PORTC=0x01;
}

void lcmd(unsigned char x)
{
PORTB=x;
  7c:	81 e0       	ldi	r24, 0x01	; 1
  7e:	88 bb       	out	0x18, r24	; 24
PORTC=0x04;
  80:	95 bb       	out	0x15, r25	; 21
  82:	f9 01       	movw	r30, r18
  84:	31 97       	sbiw	r30, 0x01	; 1
  86:	f1 f7       	brne	.-4      	; 0x84 <__SREG__+0x45>
_delay_ms(5);
PORTC=0;
  88:	15 ba       	out	0x15, r1	; 21
PORTC=0x01;
}

void lcmd(unsigned char x)
{
PORTB=x;
  8a:	80 e8       	ldi	r24, 0x80	; 128
  8c:	88 bb       	out	0x18, r24	; 24
PORTC=0x04;
  8e:	95 bb       	out	0x15, r25	; 21
  90:	c9 01       	movw	r24, r18
  92:	01 97       	sbiw	r24, 0x01	; 1
  94:	f1 f7       	brne	.-4      	; 0x92 <__SREG__+0x53>
_delay_ms(5);
PORTC=0;
  96:	15 ba       	out	0x15, r1	; 21
lcmd(0x0e);
lcmd(0x01);
lcmd(0x80);
while(1)
{while((UCSRA&(1<<RXC))==0);
UCSRA=(1<<RXC);
  98:	60 e8       	ldi	r22, 0x80	; 128
}
}
void ldata(unsigned char x)
{
PORTB=x;
PORTC=0x05;
  9a:	55 e0       	ldi	r21, 0x05	; 5
_delay_ms(5);
PORTC=0x01;
  9c:	41 e0       	ldi	r20, 0x01	; 1
lcmd(0x06);
lcmd(0x0e);
lcmd(0x01);
lcmd(0x80);
while(1)
{while((UCSRA&(1<<RXC))==0);
  9e:	5f 9b       	sbis	0x0b, 7	; 11
  a0:	fe cf       	rjmp	.-4      	; 0x9e <__SREG__+0x5f>
UCSRA=(1<<RXC);
  a2:	6b b9       	out	0x0b, r22	; 11
ldata(UDR);
  a4:	8c b1       	in	r24, 0x0c	; 12
}
}
void ldata(unsigned char x)
{
PORTB=x;
  a6:	88 bb       	out	0x18, r24	; 24
PORTC=0x05;
  a8:	55 bb       	out	0x15, r21	; 21
  aa:	c9 01       	movw	r24, r18
  ac:	01 97       	sbiw	r24, 0x01	; 1
  ae:	f1 f7       	brne	.-4      	; 0xac <__SREG__+0x6d>
_delay_ms(5);
PORTC=0x01;
  b0:	45 bb       	out	0x15, r20	; 21
  b2:	f5 cf       	rjmp	.-22     	; 0x9e <__SREG__+0x5f>

000000b4 <ldata>:
ldata(UDR);
}
}
void ldata(unsigned char x)
{
PORTB=x;
  b4:	88 bb       	out	0x18, r24	; 24
PORTC=0x05;
  b6:	85 e0       	ldi	r24, 0x05	; 5
  b8:	85 bb       	out	0x15, r24	; 21
  ba:	82 ee       	ldi	r24, 0xE2	; 226
  bc:	94 e0       	ldi	r25, 0x04	; 4
  be:	01 97       	sbiw	r24, 0x01	; 1
  c0:	f1 f7       	brne	.-4      	; 0xbe <ldata+0xa>
_delay_ms(5);
PORTC=0x01;
  c2:	81 e0       	ldi	r24, 0x01	; 1
  c4:	85 bb       	out	0x15, r24	; 21
}
  c6:	08 95       	ret

000000c8 <lcmd>:

void lcmd(unsigned char x)
{
PORTB=x;
  c8:	88 bb       	out	0x18, r24	; 24
PORTC=0x04;
  ca:	84 e0       	ldi	r24, 0x04	; 4
  cc:	85 bb       	out	0x15, r24	; 21
  ce:	82 ee       	ldi	r24, 0xE2	; 226
  d0:	94 e0       	ldi	r25, 0x04	; 4
  d2:	01 97       	sbiw	r24, 0x01	; 1
  d4:	f1 f7       	brne	.-4      	; 0xd2 <lcmd+0xa>
_delay_ms(5);
PORTC=0;
  d6:	15 ba       	out	0x15, r1	; 21
}
  d8:	08 95       	ret

000000da <_exit>:
  da:	f8 94       	cli

000000dc <__stop_program>:
  dc:	ff cf       	rjmp	.-2      	; 0xdc <__stop_program>
