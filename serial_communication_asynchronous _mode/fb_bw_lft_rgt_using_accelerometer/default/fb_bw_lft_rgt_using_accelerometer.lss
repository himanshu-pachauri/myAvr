
fb_bw_lft_rgt_using_accelerometer.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000039e  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000024  00800060  0000039e  00000412  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .debug_aranges 00000020  00000000  00000000  00000436  2**0
                  CONTENTS, READONLY, DEBUGGING
  3 .debug_pubnames 00000040  00000000  00000000  00000456  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_info   00000669  00000000  00000000  00000496  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_abbrev 00000188  00000000  00000000  00000aff  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_line   00000546  00000000  00000000  00000c87  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_frame  00000060  00000000  00000000  000011d0  2**2
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_str    00000149  00000000  00000000  00001230  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_loc    0000033a  00000000  00000000  00001379  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_ranges 00000108  00000000  00000000  000016b3  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	12 c0       	rjmp	.+36     	; 0x26 <__ctors_end>
   2:	24 c0       	rjmp	.+72     	; 0x4c <__bad_interrupt>
   4:	23 c0       	rjmp	.+70     	; 0x4c <__bad_interrupt>
   6:	22 c0       	rjmp	.+68     	; 0x4c <__bad_interrupt>
   8:	21 c0       	rjmp	.+66     	; 0x4c <__bad_interrupt>
   a:	20 c0       	rjmp	.+64     	; 0x4c <__bad_interrupt>
   c:	1f c0       	rjmp	.+62     	; 0x4c <__bad_interrupt>
   e:	1e c0       	rjmp	.+60     	; 0x4c <__bad_interrupt>
  10:	1d c0       	rjmp	.+58     	; 0x4c <__bad_interrupt>
  12:	1c c0       	rjmp	.+56     	; 0x4c <__bad_interrupt>
  14:	1b c0       	rjmp	.+54     	; 0x4c <__bad_interrupt>
  16:	1a c0       	rjmp	.+52     	; 0x4c <__bad_interrupt>
  18:	19 c0       	rjmp	.+50     	; 0x4c <__bad_interrupt>
  1a:	18 c0       	rjmp	.+48     	; 0x4c <__bad_interrupt>
  1c:	17 c0       	rjmp	.+46     	; 0x4c <__bad_interrupt>
  1e:	16 c0       	rjmp	.+44     	; 0x4c <__bad_interrupt>
  20:	15 c0       	rjmp	.+42     	; 0x4c <__bad_interrupt>
  22:	14 c0       	rjmp	.+40     	; 0x4c <__bad_interrupt>
  24:	13 c0       	rjmp	.+38     	; 0x4c <__bad_interrupt>

00000026 <__ctors_end>:
  26:	11 24       	eor	r1, r1
  28:	1f be       	out	0x3f, r1	; 63
  2a:	cf e5       	ldi	r28, 0x5F	; 95
  2c:	d4 e0       	ldi	r29, 0x04	; 4
  2e:	de bf       	out	0x3e, r29	; 62
  30:	cd bf       	out	0x3d, r28	; 61

00000032 <__do_copy_data>:
  32:	10 e0       	ldi	r17, 0x00	; 0
  34:	a0 e6       	ldi	r26, 0x60	; 96
  36:	b0 e0       	ldi	r27, 0x00	; 0
  38:	ee e9       	ldi	r30, 0x9E	; 158
  3a:	f3 e0       	ldi	r31, 0x03	; 3
  3c:	02 c0       	rjmp	.+4      	; 0x42 <.do_copy_data_start>

0000003e <.do_copy_data_loop>:
  3e:	05 90       	lpm	r0, Z+
  40:	0d 92       	st	X+, r0

00000042 <.do_copy_data_start>:
  42:	a4 38       	cpi	r26, 0x84	; 132
  44:	b1 07       	cpc	r27, r17
  46:	d9 f7       	brne	.-10     	; 0x3e <.do_copy_data_loop>
  48:	86 d0       	rcall	.+268    	; 0x156 <main>
  4a:	a7 c1       	rjmp	.+846    	; 0x39a <_exit>

0000004c <__bad_interrupt>:
  4c:	d9 cf       	rjmp	.-78     	; 0x0 <__vectors>

0000004e <lcmd>:

}
}
void lcmd(unsigned char x)
{
	LCD=x;//lcd data port
  4e:	82 bb       	out	0x12, r24	; 18
	PIN|=0x04;//lcd rs,rw,en(0,1,2)
  50:	c2 9a       	sbi	0x18, 2	; 24
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
  52:	84 ef       	ldi	r24, 0xF4	; 244
  54:	91 e0       	ldi	r25, 0x01	; 1
  56:	01 97       	sbiw	r24, 0x01	; 1
  58:	f1 f7       	brne	.-4      	; 0x56 <lcmd+0x8>
	_delay_ms(2);
	PIN=0;
  5a:	18 ba       	out	0x18, r1	; 24
	}
  5c:	08 95       	ret

0000005e <ldata>:
void ldata(unsigned char x)
{	LCD	=x;
  5e:	82 bb       	out	0x12, r24	; 18
	PIN=0x05;
  60:	85 e0       	ldi	r24, 0x05	; 5
  62:	88 bb       	out	0x18, r24	; 24
  64:	84 ef       	ldi	r24, 0xF4	; 244
  66:	91 e0       	ldi	r25, 0x01	; 1
  68:	01 97       	sbiw	r24, 0x01	; 1
  6a:	f1 f7       	brne	.-4      	; 0x68 <ldata+0xa>
	_delay_ms(2);
	PIN=0x01;
  6c:	81 e0       	ldi	r24, 0x01	; 1
  6e:	88 bb       	out	0x18, r24	; 24
	}
  70:	08 95       	ret

00000072 <lstr>:
void lstr(unsigned char *p)
{while(*p!=0)
  72:	fc 01       	movw	r30, r24
	_delay_ms(2);
	PIN=0;
	}
void ldata(unsigned char x)
{	LCD	=x;
	PIN=0x05;
  74:	55 e0       	ldi	r21, 0x05	; 5
  76:	24 ef       	ldi	r18, 0xF4	; 244
  78:	31 e0       	ldi	r19, 0x01	; 1
	_delay_ms(2);
	PIN=0x01;
  7a:	41 e0       	ldi	r20, 0x01	; 1
  7c:	07 c0       	rjmp	.+14     	; 0x8c <lstr+0x1a>
	PIN|=0x04;//lcd rs,rw,en(0,1,2)
	_delay_ms(2);
	PIN=0;
	}
void ldata(unsigned char x)
{	LCD	=x;
  7e:	82 bb       	out	0x12, r24	; 18
	PIN=0x05;
  80:	58 bb       	out	0x18, r21	; 24
  82:	c9 01       	movw	r24, r18
  84:	01 97       	sbiw	r24, 0x01	; 1
  86:	f1 f7       	brne	.-4      	; 0x84 <lstr+0x12>
	_delay_ms(2);
	PIN=0x01;
  88:	48 bb       	out	0x18, r20	; 24
	}
void lstr(unsigned char *p)
{while(*p!=0)
{
ldata(*p);
p++;
  8a:	31 96       	adiw	r30, 0x01	; 1
	PIN=0x05;
	_delay_ms(2);
	PIN=0x01;
	}
void lstr(unsigned char *p)
{while(*p!=0)
  8c:	80 81       	ld	r24, Z
  8e:	88 23       	and	r24, r24
  90:	b1 f7       	brne	.-20     	; 0x7e <lstr+0xc>
{
ldata(*p);
p++;
}}
  92:	08 95       	ret

00000094 <li2s>:
void li2s(long int c)
{unsigned char a[5]="0.00";
  94:	8f 92       	push	r8
  96:	9f 92       	push	r9
  98:	af 92       	push	r10
  9a:	bf 92       	push	r11
  9c:	cf 92       	push	r12
  9e:	df 92       	push	r13
  a0:	ef 92       	push	r14
  a2:	ff 92       	push	r15
  a4:	0f 93       	push	r16
  a6:	1f 93       	push	r17
  a8:	df 93       	push	r29
  aa:	cf 93       	push	r28
  ac:	00 d0       	rcall	.+0      	; 0xae <li2s+0x1a>
  ae:	00 d0       	rcall	.+0      	; 0xb0 <li2s+0x1c>
  b0:	0f 92       	push	r0
  b2:	cd b7       	in	r28, 0x3d	; 61
  b4:	de b7       	in	r29, 0x3e	; 62
  b6:	7b 01       	movw	r14, r22
  b8:	8c 01       	movw	r16, r24
  ba:	de 01       	movw	r26, r28
  bc:	11 96       	adiw	r26, 0x01	; 1
  be:	e0 e6       	ldi	r30, 0x60	; 96
  c0:	f0 e0       	ldi	r31, 0x00	; 0
  c2:	85 e0       	ldi	r24, 0x05	; 5
  c4:	01 90       	ld	r0, Z+
  c6:	0d 92       	st	X+, r0
  c8:	81 50       	subi	r24, 0x01	; 1
  ca:	e1 f7       	brne	.-8      	; 0xc4 <li2s+0x30>
  cc:	83 e0       	ldi	r24, 0x03	; 3
  ce:	c8 2e       	mov	r12, r24
  d0:	d1 2c       	mov	r13, r1
int i=3;
while(c>0)
{a[i]=(c%10+48);
  d2:	4e 01       	movw	r8, r28
  d4:	08 94       	sec
  d6:	81 1c       	adc	r8, r1
  d8:	91 1c       	adc	r9, r1
  da:	22 c0       	rjmp	.+68     	; 0x120 <li2s+0x8c>
c/=10;
i--;
  dc:	56 01       	movw	r10, r12
  de:	08 94       	sec
  e0:	a1 08       	sbc	r10, r1
  e2:	b1 08       	sbc	r11, r1
if(i==1)
  e4:	81 e0       	ldi	r24, 0x01	; 1
  e6:	a8 16       	cp	r10, r24
  e8:	b1 04       	cpc	r11, r1
  ea:	11 f4       	brne	.+4      	; 0xf0 <li2s+0x5c>
  ec:	aa 24       	eor	r10, r10
  ee:	bb 24       	eor	r11, r11
}}
void li2s(long int c)
{unsigned char a[5]="0.00";
int i=3;
while(c>0)
{a[i]=(c%10+48);
  f0:	c8 0c       	add	r12, r8
  f2:	d9 1c       	adc	r13, r9
  f4:	c8 01       	movw	r24, r16
  f6:	b7 01       	movw	r22, r14
  f8:	2a e0       	ldi	r18, 0x0A	; 10
  fa:	30 e0       	ldi	r19, 0x00	; 0
  fc:	40 e0       	ldi	r20, 0x00	; 0
  fe:	50 e0       	ldi	r21, 0x00	; 0
 100:	0f d1       	rcall	.+542    	; 0x320 <__divmodsi4>
 102:	60 5d       	subi	r22, 0xD0	; 208
 104:	f6 01       	movw	r30, r12
 106:	60 83       	st	Z, r22
c/=10;
 108:	c8 01       	movw	r24, r16
 10a:	b7 01       	movw	r22, r14
 10c:	2a e0       	ldi	r18, 0x0A	; 10
 10e:	30 e0       	ldi	r19, 0x00	; 0
 110:	40 e0       	ldi	r20, 0x00	; 0
 112:	50 e0       	ldi	r21, 0x00	; 0
 114:	05 d1       	rcall	.+522    	; 0x320 <__divmodsi4>
 116:	c9 01       	movw	r24, r18
 118:	da 01       	movw	r26, r20
 11a:	7c 01       	movw	r14, r24
 11c:	8d 01       	movw	r16, r26
 11e:	65 01       	movw	r12, r10
p++;
}}
void li2s(long int c)
{unsigned char a[5]="0.00";
int i=3;
while(c>0)
 120:	1e 14       	cp	r1, r14
 122:	1f 04       	cpc	r1, r15
 124:	10 06       	cpc	r1, r16
 126:	11 06       	cpc	r1, r17
 128:	cc f2       	brlt	.-78     	; 0xdc <li2s+0x48>
if(i==1)
{
i=0;
}
}
a[5]=0;
 12a:	1e 82       	std	Y+6, r1	; 0x06
lstr(&a[0]);
 12c:	ce 01       	movw	r24, r28
 12e:	01 96       	adiw	r24, 0x01	; 1
 130:	a0 df       	rcall	.-192    	; 0x72 <lstr>
}
 132:	0f 90       	pop	r0
 134:	0f 90       	pop	r0
 136:	0f 90       	pop	r0
 138:	0f 90       	pop	r0
 13a:	0f 90       	pop	r0
 13c:	cf 91       	pop	r28
 13e:	df 91       	pop	r29
 140:	1f 91       	pop	r17
 142:	0f 91       	pop	r16
 144:	ff 90       	pop	r15
 146:	ef 90       	pop	r14
 148:	df 90       	pop	r13
 14a:	cf 90       	pop	r12
 14c:	bf 90       	pop	r11
 14e:	af 90       	pop	r10
 150:	9f 90       	pop	r9
 152:	8f 90       	pop	r8
 154:	08 95       	ret

00000156 <main>:
void lcmd(unsigned char);
void ldata(unsigned char);
void lstr(unsigned char*);
void li2s(long int);
void main()
{int x1=0,x2=0,y1=0,y2=0;
 156:	2f 92       	push	r2
 158:	3f 92       	push	r3
 15a:	4f 92       	push	r4
 15c:	5f 92       	push	r5
 15e:	6f 92       	push	r6
 160:	7f 92       	push	r7
 162:	8f 92       	push	r8
 164:	9f 92       	push	r9
 166:	af 92       	push	r10
 168:	bf 92       	push	r11
 16a:	cf 92       	push	r12
 16c:	df 92       	push	r13
 16e:	ef 92       	push	r14
 170:	ff 92       	push	r15
 172:	0f 93       	push	r16
 174:	1f 93       	push	r17
 176:	cf 93       	push	r28
 178:	df 93       	push	r29
int z1=0,z2;

DDRD=0XFF;
 17a:	8f ef       	ldi	r24, 0xFF	; 255
 17c:	81 bb       	out	0x11, r24	; 17
DDRB=0XFF;
 17e:	87 bb       	out	0x17, r24	; 23

}
}
void lcmd(unsigned char x)
{
	LCD=x;//lcd data port
 180:	88 e3       	ldi	r24, 0x38	; 56
 182:	82 bb       	out	0x12, r24	; 18
	PIN|=0x04;//lcd rs,rw,en(0,1,2)
 184:	c2 9a       	sbi	0x18, 2	; 24
 186:	24 ef       	ldi	r18, 0xF4	; 244
 188:	31 e0       	ldi	r19, 0x01	; 1
 18a:	c9 01       	movw	r24, r18
 18c:	01 97       	sbiw	r24, 0x01	; 1
 18e:	f1 f7       	brne	.-4      	; 0x18c <main+0x36>
	_delay_ms(2);
	PIN=0;
 190:	18 ba       	out	0x18, r1	; 24

}
}
void lcmd(unsigned char x)
{
	LCD=x;//lcd data port
 192:	86 e0       	ldi	r24, 0x06	; 6
 194:	82 bb       	out	0x12, r24	; 18
	PIN|=0x04;//lcd rs,rw,en(0,1,2)
 196:	c2 9a       	sbi	0x18, 2	; 24
 198:	c9 01       	movw	r24, r18
 19a:	01 97       	sbiw	r24, 0x01	; 1
 19c:	f1 f7       	brne	.-4      	; 0x19a <main+0x44>
	_delay_ms(2);
	PIN=0;
 19e:	18 ba       	out	0x18, r1	; 24

}
}
void lcmd(unsigned char x)
{
	LCD=x;//lcd data port
 1a0:	81 e0       	ldi	r24, 0x01	; 1
 1a2:	82 bb       	out	0x12, r24	; 18
	PIN|=0x04;//lcd rs,rw,en(0,1,2)
 1a4:	c2 9a       	sbi	0x18, 2	; 24
 1a6:	c9 01       	movw	r24, r18
 1a8:	01 97       	sbiw	r24, 0x01	; 1
 1aa:	f1 f7       	brne	.-4      	; 0x1a8 <main+0x52>
	_delay_ms(2);
	PIN=0;
 1ac:	18 ba       	out	0x18, r1	; 24

}
}
void lcmd(unsigned char x)
{
	LCD=x;//lcd data port
 1ae:	8c e0       	ldi	r24, 0x0C	; 12
 1b0:	82 bb       	out	0x12, r24	; 18
	PIN|=0x04;//lcd rs,rw,en(0,1,2)
 1b2:	c2 9a       	sbi	0x18, 2	; 24
 1b4:	c9 01       	movw	r24, r18
 1b6:	01 97       	sbiw	r24, 0x01	; 1
 1b8:	f1 f7       	brne	.-4      	; 0x1b6 <main+0x60>
	_delay_ms(2);
	PIN=0;
 1ba:	18 ba       	out	0x18, r1	; 24
lcmd(0X38);
lcmd(0x06);
lcmd(0x01);
lcmd(0x0c);

ADCSRA=0Xc7;
 1bc:	87 ec       	ldi	r24, 0xC7	; 199
 1be:	86 b9       	out	0x06, r24	; 6
 1c0:	aa 24       	eor	r10, r10
 1c2:	bb 24       	eor	r11, r11
 1c4:	88 24       	eor	r8, r8
 1c6:	99 24       	eor	r9, r9
 1c8:	66 24       	eor	r6, r6
 1ca:	77 24       	eor	r7, r7
 1cc:	e4 ef       	ldi	r30, 0xF4	; 244
 1ce:	ce 2e       	mov	r12, r30
 1d0:	e1 e0       	ldi	r30, 0x01	; 1
 1d2:	de 2e       	mov	r13, r30

}
}
void lcmd(unsigned char x)
{
	LCD=x;//lcd data port
 1d4:	70 ec       	ldi	r23, 0xC0	; 192
 1d6:	27 2e       	mov	r2, r23
{//lcmd(0x01);
y2=y1;
x2=x1;
z2=z1;

ADMUX=0X03;
 1d8:	60 e9       	ldi	r22, 0x90	; 144
 1da:	36 2e       	mov	r3, r22
 1dc:	50 ed       	ldi	r21, 0xD0	; 208
 1de:	45 2e       	mov	r4, r21
 1e0:	47 ed       	ldi	r20, 0xD7	; 215
 1e2:	54 2e       	mov	r5, r20
 1e4:	83 e0       	ldi	r24, 0x03	; 3
 1e6:	87 b9       	out	0x07, r24	; 7
ADCSRA|=0xc7;
 1e8:	86 b1       	in	r24, 0x06	; 6
 1ea:	87 6c       	ori	r24, 0xC7	; 199
 1ec:	86 b9       	out	0x06, r24	; 6
while((ADCSRA&(0x01))==0);
 1ee:	30 9b       	sbis	0x06, 0	; 6
 1f0:	fe cf       	rjmp	.-4      	; 0x1ee <main+0x98>
z1=ADC/2;
 1f2:	e4 b0       	in	r14, 0x04	; 4
 1f4:	f5 b0       	in	r15, 0x05	; 5
 1f6:	f6 94       	lsr	r15
 1f8:	e7 94       	ror	r14
ADCSRA|=(0x01);
 1fa:	30 9a       	sbi	0x06, 0	; 6

ADMUX=0X00;
 1fc:	17 b8       	out	0x07, r1	; 7
ADCSRA|=0xc7;
 1fe:	86 b1       	in	r24, 0x06	; 6
 200:	87 6c       	ori	r24, 0xC7	; 199
 202:	86 b9       	out	0x06, r24	; 6
while((ADCSRA&(0x01))==0);
 204:	30 9b       	sbis	0x06, 0	; 6
 206:	fe cf       	rjmp	.-4      	; 0x204 <main+0xae>
x1=ADC/2;
 208:	04 b1       	in	r16, 0x04	; 4
 20a:	15 b1       	in	r17, 0x05	; 5
 20c:	16 95       	lsr	r17
 20e:	07 95       	ror	r16
ADCSRA|=(0x01);
 210:	30 9a       	sbi	0x06, 0	; 6

ADMUX=0X01;
 212:	81 e0       	ldi	r24, 0x01	; 1
 214:	87 b9       	out	0x07, r24	; 7
ADCSRA|=0xc7;
 216:	86 b1       	in	r24, 0x06	; 6
 218:	87 6c       	ori	r24, 0xC7	; 199
 21a:	86 b9       	out	0x06, r24	; 6
while((ADCSRA&(0x01))==0);
 21c:	30 9b       	sbis	0x06, 0	; 6
 21e:	fe cf       	rjmp	.-4      	; 0x21c <main+0xc6>
y1=ADC/2;
 220:	c4 b1       	in	r28, 0x04	; 4
 222:	d5 b1       	in	r29, 0x05	; 5
 224:	d6 95       	lsr	r29
 226:	c7 95       	ror	r28
ADCSRA|=(0x01);
 228:	30 9a       	sbi	0x06, 0	; 6

}
}
void lcmd(unsigned char x)
{
	LCD=x;//lcd data port
 22a:	80 e8       	ldi	r24, 0x80	; 128
 22c:	82 bb       	out	0x12, r24	; 18
	PIN|=0x04;//lcd rs,rw,en(0,1,2)
 22e:	c2 9a       	sbi	0x18, 2	; 24
 230:	c6 01       	movw	r24, r12
 232:	01 97       	sbiw	r24, 0x01	; 1
 234:	f1 f7       	brne	.-4      	; 0x232 <main+0xdc>
	_delay_ms(2);
	PIN=0;
 236:	18 ba       	out	0x18, r1	; 24
ADCSRA|=(0x01);



lcmd(0x80);//row 1
lstr("X=");
 238:	85 e6       	ldi	r24, 0x65	; 101
 23a:	90 e0       	ldi	r25, 0x00	; 0
 23c:	1a df       	rcall	.-460    	; 0x72 <lstr>
li2s(x1);
 23e:	b8 01       	movw	r22, r16
 240:	88 27       	eor	r24, r24
 242:	77 fd       	sbrc	r23, 7
 244:	80 95       	com	r24
 246:	98 2f       	mov	r25, r24
 248:	25 df       	rcall	.-438    	; 0x94 <li2s>

}
}
void lcmd(unsigned char x)
{
	LCD=x;//lcd data port
 24a:	87 e8       	ldi	r24, 0x87	; 135
 24c:	82 bb       	out	0x12, r24	; 18
	PIN|=0x04;//lcd rs,rw,en(0,1,2)
 24e:	c2 9a       	sbi	0x18, 2	; 24
 250:	c6 01       	movw	r24, r12
 252:	01 97       	sbiw	r24, 0x01	; 1
 254:	f1 f7       	brne	.-4      	; 0x252 <main+0xfc>
	_delay_ms(2);
	PIN=0;
 256:	18 ba       	out	0x18, r1	; 24
lcmd(0x80);//row 1
lstr("X=");
li2s(x1);

lcmd(0x87);//row 1
lstr("Y=");
 258:	88 e6       	ldi	r24, 0x68	; 104
 25a:	90 e0       	ldi	r25, 0x00	; 0
 25c:	0a df       	rcall	.-492    	; 0x72 <lstr>
li2s(y1);
 25e:	be 01       	movw	r22, r28
 260:	88 27       	eor	r24, r24
 262:	77 fd       	sbrc	r23, 7
 264:	80 95       	com	r24
 266:	98 2f       	mov	r25, r24
 268:	15 df       	rcall	.-470    	; 0x94 <li2s>

}
}
void lcmd(unsigned char x)
{
	LCD=x;//lcd data port
 26a:	22 ba       	out	0x12, r2	; 18
	PIN|=0x04;//lcd rs,rw,en(0,1,2)
 26c:	c2 9a       	sbi	0x18, 2	; 24
 26e:	c6 01       	movw	r24, r12
 270:	01 97       	sbiw	r24, 0x01	; 1
 272:	f1 f7       	brne	.-4      	; 0x270 <main+0x11a>
	_delay_ms(2);
	PIN=0;
 274:	18 ba       	out	0x18, r1	; 24
lcmd(0x87);//row 1
lstr("Y=");
li2s(y1);

lcmd(0xc0);//row 2
lstr("Z=");
 276:	8b e6       	ldi	r24, 0x6B	; 107
 278:	90 e0       	ldi	r25, 0x00	; 0
 27a:	fb de       	rcall	.-522    	; 0x72 <lstr>
li2s(z1);
 27c:	b7 01       	movw	r22, r14
 27e:	88 27       	eor	r24, r24
 280:	77 fd       	sbrc	r23, 7
 282:	80 95       	com	r24
 284:	98 2f       	mov	r25, r24
 286:	06 df       	rcall	.-500    	; 0x94 <li2s>


if(x1>x2)
 288:	a0 16       	cp	r10, r16
 28a:	b1 06       	cpc	r11, r17
 28c:	4c f4       	brge	.+18     	; 0x2a0 <main+0x14a>

}
}
void lcmd(unsigned char x)
{
	LCD=x;//lcd data port
 28e:	32 ba       	out	0x12, r3	; 18
	PIN|=0x04;//lcd rs,rw,en(0,1,2)
 290:	c2 9a       	sbi	0x18, 2	; 24
 292:	c6 01       	movw	r24, r12
 294:	01 97       	sbiw	r24, 0x01	; 1
 296:	f1 f7       	brne	.-4      	; 0x294 <main+0x13e>
	_delay_ms(2);
	PIN=0;
 298:	18 ba       	out	0x18, r1	; 24
li2s(z1);


if(x1>x2)
{lcmd(0x90);//
lstr("f/b");}
 29a:	8e e6       	ldi	r24, 0x6E	; 110
 29c:	90 e0       	ldi	r25, 0x00	; 0
 29e:	e9 de       	rcall	.-558    	; 0x72 <lstr>

if(x1<x2)
 2a0:	0a 15       	cp	r16, r10
 2a2:	1b 05       	cpc	r17, r11
 2a4:	4c f4       	brge	.+18     	; 0x2b8 <main+0x162>

}
}
void lcmd(unsigned char x)
{
	LCD=x;//lcd data port
 2a6:	32 ba       	out	0x12, r3	; 18
	PIN|=0x04;//lcd rs,rw,en(0,1,2)
 2a8:	c2 9a       	sbi	0x18, 2	; 24
 2aa:	c6 01       	movw	r24, r12
 2ac:	01 97       	sbiw	r24, 0x01	; 1
 2ae:	f1 f7       	brne	.-4      	; 0x2ac <main+0x156>
	_delay_ms(2);
	PIN=0;
 2b0:	18 ba       	out	0x18, r1	; 24
{lcmd(0x90);//
lstr("f/b");}

if(x1<x2)
{lcmd(0x90);
lstr("b/w");}
 2b2:	82 e7       	ldi	r24, 0x72	; 114
 2b4:	90 e0       	ldi	r25, 0x00	; 0
 2b6:	dd de       	rcall	.-582    	; 0x72 <lstr>

if(y1>y2)
 2b8:	8c 16       	cp	r8, r28
 2ba:	9d 06       	cpc	r9, r29
 2bc:	4c f4       	brge	.+18     	; 0x2d0 <main+0x17a>

}
}
void lcmd(unsigned char x)
{
	LCD=x;//lcd data port
 2be:	42 ba       	out	0x12, r4	; 18
	PIN|=0x04;//lcd rs,rw,en(0,1,2)
 2c0:	c2 9a       	sbi	0x18, 2	; 24
 2c2:	c6 01       	movw	r24, r12
 2c4:	01 97       	sbiw	r24, 0x01	; 1
 2c6:	f1 f7       	brne	.-4      	; 0x2c4 <main+0x16e>
	_delay_ms(2);
	PIN=0;
 2c8:	18 ba       	out	0x18, r1	; 24
{lcmd(0x90);
lstr("b/w");}

if(y1>y2)
{lcmd(0xd0);
lstr("r/t");}
 2ca:	86 e7       	ldi	r24, 0x76	; 118
 2cc:	90 e0       	ldi	r25, 0x00	; 0
 2ce:	d1 de       	rcall	.-606    	; 0x72 <lstr>

if(y1<y2)
 2d0:	c8 15       	cp	r28, r8
 2d2:	d9 05       	cpc	r29, r9
 2d4:	4c f4       	brge	.+18     	; 0x2e8 <main+0x192>

}
}
void lcmd(unsigned char x)
{
	LCD=x;//lcd data port
 2d6:	42 ba       	out	0x12, r4	; 18
	PIN|=0x04;//lcd rs,rw,en(0,1,2)
 2d8:	c2 9a       	sbi	0x18, 2	; 24
 2da:	c6 01       	movw	r24, r12
 2dc:	01 97       	sbiw	r24, 0x01	; 1
 2de:	f1 f7       	brne	.-4      	; 0x2dc <main+0x186>
	_delay_ms(2);
	PIN=0;
 2e0:	18 ba       	out	0x18, r1	; 24
{lcmd(0xd0);
lstr("r/t");}

if(y1<y2)
{lcmd(0xd0);
lstr("l/t");}
 2e2:	8a e7       	ldi	r24, 0x7A	; 122
 2e4:	90 e0       	ldi	r25, 0x00	; 0
 2e6:	c5 de       	rcall	.-630    	; 0x72 <lstr>


if(z1<z2)
 2e8:	e6 14       	cp	r14, r6
 2ea:	f7 04       	cpc	r15, r7
 2ec:	4c f4       	brge	.+18     	; 0x300 <main+0x1aa>

}
}
void lcmd(unsigned char x)
{
	LCD=x;//lcd data port
 2ee:	52 ba       	out	0x12, r5	; 18
	PIN|=0x04;//lcd rs,rw,en(0,1,2)
 2f0:	c2 9a       	sbi	0x18, 2	; 24
 2f2:	c6 01       	movw	r24, r12
 2f4:	01 97       	sbiw	r24, 0x01	; 1
 2f6:	f1 f7       	brne	.-4      	; 0x2f4 <main+0x19e>
	_delay_ms(2);
	PIN=0;
 2f8:	18 ba       	out	0x18, r1	; 24
lstr("l/t");}


if(z1<z2)
{lcmd(0xd7);
lstr("up");
 2fa:	8e e7       	ldi	r24, 0x7E	; 126
 2fc:	90 e0       	ldi	r25, 0x00	; 0
 2fe:	b9 de       	rcall	.-654    	; 0x72 <lstr>
}

if(z1>z2)
 300:	6e 14       	cp	r6, r14
 302:	7f 04       	cpc	r7, r15
 304:	4c f4       	brge	.+18     	; 0x318 <main+0x1c2>

}
}
void lcmd(unsigned char x)
{
	LCD=x;//lcd data port
 306:	52 ba       	out	0x12, r5	; 18
	PIN|=0x04;//lcd rs,rw,en(0,1,2)
 308:	c2 9a       	sbi	0x18, 2	; 24
 30a:	c6 01       	movw	r24, r12
 30c:	01 97       	sbiw	r24, 0x01	; 1
 30e:	f1 f7       	brne	.-4      	; 0x30c <main+0x1b6>
	_delay_ms(2);
	PIN=0;
 310:	18 ba       	out	0x18, r1	; 24
lstr("up");
}

if(z1>z2)
{lcmd(0xd7);
lstr("dn");
 312:	81 e8       	ldi	r24, 0x81	; 129
 314:	90 e0       	ldi	r25, 0x00	; 0
 316:	ad de       	rcall	.-678    	; 0x72 <lstr>
 318:	58 01       	movw	r10, r16
 31a:	4e 01       	movw	r8, r28
 31c:	37 01       	movw	r6, r14
 31e:	62 cf       	rjmp	.-316    	; 0x1e4 <main+0x8e>

00000320 <__divmodsi4>:
 320:	97 fb       	bst	r25, 7
 322:	09 2e       	mov	r0, r25
 324:	05 26       	eor	r0, r21
 326:	0e d0       	rcall	.+28     	; 0x344 <__divmodsi4_neg1>
 328:	57 fd       	sbrc	r21, 7
 32a:	04 d0       	rcall	.+8      	; 0x334 <__divmodsi4_neg2>
 32c:	14 d0       	rcall	.+40     	; 0x356 <__udivmodsi4>
 32e:	0a d0       	rcall	.+20     	; 0x344 <__divmodsi4_neg1>
 330:	00 1c       	adc	r0, r0
 332:	38 f4       	brcc	.+14     	; 0x342 <__divmodsi4_exit>

00000334 <__divmodsi4_neg2>:
 334:	50 95       	com	r21
 336:	40 95       	com	r20
 338:	30 95       	com	r19
 33a:	21 95       	neg	r18
 33c:	3f 4f       	sbci	r19, 0xFF	; 255
 33e:	4f 4f       	sbci	r20, 0xFF	; 255
 340:	5f 4f       	sbci	r21, 0xFF	; 255

00000342 <__divmodsi4_exit>:
 342:	08 95       	ret

00000344 <__divmodsi4_neg1>:
 344:	f6 f7       	brtc	.-4      	; 0x342 <__divmodsi4_exit>
 346:	90 95       	com	r25
 348:	80 95       	com	r24
 34a:	70 95       	com	r23
 34c:	61 95       	neg	r22
 34e:	7f 4f       	sbci	r23, 0xFF	; 255
 350:	8f 4f       	sbci	r24, 0xFF	; 255
 352:	9f 4f       	sbci	r25, 0xFF	; 255
 354:	08 95       	ret

00000356 <__udivmodsi4>:
 356:	a1 e2       	ldi	r26, 0x21	; 33
 358:	1a 2e       	mov	r1, r26
 35a:	aa 1b       	sub	r26, r26
 35c:	bb 1b       	sub	r27, r27
 35e:	fd 01       	movw	r30, r26
 360:	0d c0       	rjmp	.+26     	; 0x37c <__udivmodsi4_ep>

00000362 <__udivmodsi4_loop>:
 362:	aa 1f       	adc	r26, r26
 364:	bb 1f       	adc	r27, r27
 366:	ee 1f       	adc	r30, r30
 368:	ff 1f       	adc	r31, r31
 36a:	a2 17       	cp	r26, r18
 36c:	b3 07       	cpc	r27, r19
 36e:	e4 07       	cpc	r30, r20
 370:	f5 07       	cpc	r31, r21
 372:	20 f0       	brcs	.+8      	; 0x37c <__udivmodsi4_ep>
 374:	a2 1b       	sub	r26, r18
 376:	b3 0b       	sbc	r27, r19
 378:	e4 0b       	sbc	r30, r20
 37a:	f5 0b       	sbc	r31, r21

0000037c <__udivmodsi4_ep>:
 37c:	66 1f       	adc	r22, r22
 37e:	77 1f       	adc	r23, r23
 380:	88 1f       	adc	r24, r24
 382:	99 1f       	adc	r25, r25
 384:	1a 94       	dec	r1
 386:	69 f7       	brne	.-38     	; 0x362 <__udivmodsi4_loop>
 388:	60 95       	com	r22
 38a:	70 95       	com	r23
 38c:	80 95       	com	r24
 38e:	90 95       	com	r25
 390:	9b 01       	movw	r18, r22
 392:	ac 01       	movw	r20, r24
 394:	bd 01       	movw	r22, r26
 396:	cf 01       	movw	r24, r30
 398:	08 95       	ret

0000039a <_exit>:
 39a:	f8 94       	cli

0000039c <__stop_program>:
 39c:	ff cf       	rjmp	.-2      	; 0x39c <__stop_program>
