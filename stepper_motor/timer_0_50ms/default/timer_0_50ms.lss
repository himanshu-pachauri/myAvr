
timer_0_50ms.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000074  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .debug_aranges 00000020  00000000  00000000  000000c8  2**0
                  CONTENTS, READONLY, DEBUGGING
  2 .debug_pubnames 00000025  00000000  00000000  000000e8  2**0
                  CONTENTS, READONLY, DEBUGGING
  3 .debug_info   00000099  00000000  00000000  0000010d  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_abbrev 00000061  00000000  00000000  000001a6  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_line   000000d5  00000000  00000000  00000207  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_frame  00000030  00000000  00000000  000002dc  2**2
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_str    000000b3  00000000  00000000  0000030c  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	12 c0       	rjmp	.+36     	; 0x26 <__ctors_end>
   2:	19 c0       	rjmp	.+50     	; 0x36 <__bad_interrupt>
   4:	18 c0       	rjmp	.+48     	; 0x36 <__bad_interrupt>
   6:	17 c0       	rjmp	.+46     	; 0x36 <__bad_interrupt>
   8:	16 c0       	rjmp	.+44     	; 0x36 <__bad_interrupt>
   a:	15 c0       	rjmp	.+42     	; 0x36 <__bad_interrupt>
   c:	14 c0       	rjmp	.+40     	; 0x36 <__bad_interrupt>
   e:	13 c0       	rjmp	.+38     	; 0x36 <__bad_interrupt>
  10:	12 c0       	rjmp	.+36     	; 0x36 <__bad_interrupt>
  12:	11 c0       	rjmp	.+34     	; 0x36 <__bad_interrupt>
  14:	10 c0       	rjmp	.+32     	; 0x36 <__bad_interrupt>
  16:	0f c0       	rjmp	.+30     	; 0x36 <__bad_interrupt>
  18:	0e c0       	rjmp	.+28     	; 0x36 <__bad_interrupt>
  1a:	0d c0       	rjmp	.+26     	; 0x36 <__bad_interrupt>
  1c:	0c c0       	rjmp	.+24     	; 0x36 <__bad_interrupt>
  1e:	0b c0       	rjmp	.+22     	; 0x36 <__bad_interrupt>
  20:	0a c0       	rjmp	.+20     	; 0x36 <__bad_interrupt>
  22:	09 c0       	rjmp	.+18     	; 0x36 <__bad_interrupt>
  24:	08 c0       	rjmp	.+16     	; 0x36 <__bad_interrupt>

00000026 <__ctors_end>:
  26:	11 24       	eor	r1, r1
  28:	1f be       	out	0x3f, r1	; 63
  2a:	cf e5       	ldi	r28, 0x5F	; 95
  2c:	d4 e0       	ldi	r29, 0x04	; 4
  2e:	de bf       	out	0x3e, r29	; 62
  30:	cd bf       	out	0x3d, r28	; 61
  32:	15 d0       	rcall	.+42     	; 0x5e <main>
  34:	1d c0       	rjmp	.+58     	; 0x70 <_exit>

00000036 <__bad_interrupt>:
  36:	e4 cf       	rjmp	.-56     	; 0x0 <__vectors>

00000038 <delay>:

}
}

void delay()
{
  38:	20 e0       	ldi	r18, 0x00	; 0
  3a:	30 e0       	ldi	r19, 0x00	; 0
int i=0;
for(i=0;i<(15625/5);i++)
{TCCR0=0X03;
  3c:	43 e0       	ldi	r20, 0x03	; 3
TCNT0=0X7D;
  3e:	9d e7       	ldi	r25, 0x7D	; 125

void delay()
{
int i=0;
for(i=0;i<(15625/5);i++)
{TCCR0=0X03;
  40:	43 bf       	out	0x33, r20	; 51
TCNT0=0X7D;
  42:	92 bf       	out	0x32, r25	; 50
while(TIFR==0X01);
  44:	88 b7       	in	r24, 0x38	; 56
  46:	81 30       	cpi	r24, 0x01	; 1
  48:	e9 f3       	breq	.-6      	; 0x44 <__SREG__+0x5>
TIFR&=0XFe;
  4a:	88 b7       	in	r24, 0x38	; 56
  4c:	8e 7f       	andi	r24, 0xFE	; 254
  4e:	88 bf       	out	0x38, r24	; 56
}

void delay()
{
int i=0;
for(i=0;i<(15625/5);i++)
  50:	2f 5f       	subi	r18, 0xFF	; 255
  52:	3f 4f       	sbci	r19, 0xFF	; 255
  54:	8c e0       	ldi	r24, 0x0C	; 12
  56:	25 33       	cpi	r18, 0x35	; 53
  58:	38 07       	cpc	r19, r24
  5a:	91 f7       	brne	.-28     	; 0x40 <__SREG__+0x1>
{TCCR0=0X03;
TCNT0=0X7D;
while(TIFR==0X01);
TIFR&=0XFe;
}
}
  5c:	08 95       	ret

0000005e <main>:
#include<avr/io.h>
#include<util/delay.h>
void delay();
void main()
{
  5e:	1f 93       	push	r17
DDRD=0XFF;
  60:	8f ef       	ldi	r24, 0xFF	; 255
  62:	81 bb       	out	0x11, r24	; 17
while(1)
{
PORTD=0XFF;
  64:	1f ef       	ldi	r17, 0xFF	; 255
  66:	12 bb       	out	0x12, r17	; 18
delay();
  68:	e7 df       	rcall	.-50     	; 0x38 <delay>
PORTD=0X00;
  6a:	12 ba       	out	0x12, r1	; 18
delay();
  6c:	e5 df       	rcall	.-54     	; 0x38 <delay>
  6e:	fb cf       	rjmp	.-10     	; 0x66 <main+0x8>

00000070 <_exit>:
  70:	f8 94       	cli

00000072 <__stop_program>:
  72:	ff cf       	rjmp	.-2      	; 0x72 <__stop_program>
