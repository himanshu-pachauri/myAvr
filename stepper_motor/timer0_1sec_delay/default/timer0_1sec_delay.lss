
timer0_1sec_delay.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000008c  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .debug_aranges 00000020  00000000  00000000  000000e0  2**0
                  CONTENTS, READONLY, DEBUGGING
  2 .debug_pubnames 00000025  00000000  00000000  00000100  2**0
                  CONTENTS, READONLY, DEBUGGING
  3 .debug_info   000000b7  00000000  00000000  00000125  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_abbrev 00000072  00000000  00000000  000001dc  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_line   000000ea  00000000  00000000  0000024e  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_frame  00000030  00000000  00000000  00000338  2**2
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_str    000000bd  00000000  00000000  00000368  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_loc    00000028  00000000  00000000  00000425  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	12 c0       	rjmp	.+36     	; 0x26 <__ctors_end>
   2:	19 c0       	rjmp	.+50     	; 0x36 <__bad_interrupt>
   4:	18 c0       	rjmp	.+48     	; 0x36 <__bad_interrupt>
   6:	17 c0       	rjmp	.+46     	; 0x36 <__bad_interrupt>
   8:	16 c0       	rjmp	.+44     	; 0x36 <__bad_interrupt>
   a:	15 c0       	rjmp	.+42     	; 0x36 <__bad_interrupt>
   c:	14 c0       	rjmp	.+40     	; 0x36 <__bad_interrupt>
   e:	13 c0       	rjmp	.+38     	; 0x36 <__bad_interrupt>
  10:	12 c0       	rjmp	.+36     	; 0x36 <__bad_interrupt>
  12:	11 c0       	rjmp	.+34     	; 0x36 <__bad_interrupt>
  14:	10 c0       	rjmp	.+32     	; 0x36 <__bad_interrupt>
  16:	0f c0       	rjmp	.+30     	; 0x36 <__bad_interrupt>
  18:	0e c0       	rjmp	.+28     	; 0x36 <__bad_interrupt>
  1a:	0d c0       	rjmp	.+26     	; 0x36 <__bad_interrupt>
  1c:	0c c0       	rjmp	.+24     	; 0x36 <__bad_interrupt>
  1e:	0b c0       	rjmp	.+22     	; 0x36 <__bad_interrupt>
  20:	0a c0       	rjmp	.+20     	; 0x36 <__bad_interrupt>
  22:	09 c0       	rjmp	.+18     	; 0x36 <__bad_interrupt>
  24:	08 c0       	rjmp	.+16     	; 0x36 <__bad_interrupt>

00000026 <__ctors_end>:
  26:	11 24       	eor	r1, r1
  28:	1f be       	out	0x3f, r1	; 63
  2a:	cf e5       	ldi	r28, 0x5F	; 95
  2c:	d4 e0       	ldi	r29, 0x04	; 4
  2e:	de bf       	out	0x3e, r29	; 62
  30:	cd bf       	out	0x3d, r28	; 61
  32:	1d d0       	rcall	.+58     	; 0x6e <main>
  34:	29 c0       	rjmp	.+82     	; 0x88 <_exit>

00000036 <__bad_interrupt>:
  36:	e4 cf       	rjmp	.-56     	; 0x0 <__vectors>

00000038 <delay>:

}
}

void delay(int x)
{
  38:	bc 01       	movw	r22, r24
  3a:	40 e0       	ldi	r20, 0x00	; 0
  3c:	50 e0       	ldi	r21, 0x00	; 0
int i=0,j;
for(j=0;j<x;j++)
{for(i=0;i<20;i++)
{
TCCR0=0X05;
  3e:	e5 e0       	ldi	r30, 0x05	; 5
TCNT0=0Xce;
  40:	9e ec       	ldi	r25, 0xCE	; 206
  42:	11 c0       	rjmp	.+34     	; 0x66 <__SREG__+0x27>
}

void delay(int x)
{
int i=0,j;
for(j=0;j<x;j++)
  44:	20 e0       	ldi	r18, 0x00	; 0
  46:	30 e0       	ldi	r19, 0x00	; 0
{for(i=0;i<20;i++)
{
TCCR0=0X05;
  48:	e3 bf       	out	0x33, r30	; 51
TCNT0=0Xce;
  4a:	92 bf       	out	0x32, r25	; 50
while(TIFR==0X00);
  4c:	88 b7       	in	r24, 0x38	; 56
  4e:	88 23       	and	r24, r24
  50:	e9 f3       	breq	.-6      	; 0x4c <__SREG__+0xd>
TIFR|=0x01;
  52:	88 b7       	in	r24, 0x38	; 56
  54:	81 60       	ori	r24, 0x01	; 1
  56:	88 bf       	out	0x38, r24	; 56

void delay(int x)
{
int i=0,j;
for(j=0;j<x;j++)
{for(i=0;i<20;i++)
  58:	2f 5f       	subi	r18, 0xFF	; 255
  5a:	3f 4f       	sbci	r19, 0xFF	; 255
  5c:	24 31       	cpi	r18, 0x14	; 20
  5e:	31 05       	cpc	r19, r1
  60:	99 f7       	brne	.-26     	; 0x48 <__SREG__+0x9>
}

void delay(int x)
{
int i=0,j;
for(j=0;j<x;j++)
  62:	4f 5f       	subi	r20, 0xFF	; 255
  64:	5f 4f       	sbci	r21, 0xFF	; 255
  66:	46 17       	cp	r20, r22
  68:	57 07       	cpc	r21, r23
  6a:	64 f3       	brlt	.-40     	; 0x44 <__SREG__+0x5>
TCCR0=0X05;
TCNT0=0Xce;
while(TIFR==0X00);
TIFR|=0x01;
}}
}
  6c:	08 95       	ret

0000006e <main>:
#include<avr/io.h>
#include<util/delay.h>
void delay(int );
void main()
{
  6e:	1f 93       	push	r17
DDRD=0XFF;
  70:	8f ef       	ldi	r24, 0xFF	; 255
  72:	81 bb       	out	0x11, r24	; 17
while(1)
{
PORTD=0XFF;
  74:	1f ef       	ldi	r17, 0xFF	; 255
  76:	12 bb       	out	0x12, r17	; 18
delay(1);
  78:	81 e0       	ldi	r24, 0x01	; 1
  7a:	90 e0       	ldi	r25, 0x00	; 0
  7c:	dd df       	rcall	.-70     	; 0x38 <delay>
PORTD=0X00;
  7e:	12 ba       	out	0x12, r1	; 18
delay(1);
  80:	81 e0       	ldi	r24, 0x01	; 1
  82:	90 e0       	ldi	r25, 0x00	; 0
  84:	d9 df       	rcall	.-78     	; 0x38 <delay>
  86:	f7 cf       	rjmp	.-18     	; 0x76 <main+0x8>

00000088 <_exit>:
  88:	f8 94       	cli

0000008a <__stop_program>:
  8a:	ff cf       	rjmp	.-2      	; 0x8a <__stop_program>
